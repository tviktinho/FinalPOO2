package entidades.usuario;

import javafx.fxml.FXML;
import javafx.scene.control.TextField;
import javafx.scene.control.Button;
import javafx.stage.Stage;

public class UsuarioEditController {

    private Usuario usuario;

    @FXML
    private TextField txtNome;
    @FXML
    private TextField txtEmail;
    // Adicione mais campos conforme necessário

    @FXML
    private Button btnSave;
    @FXML
    private Button btnCancel;

    // Método para setar o usuário a ser editado
    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
        updateUI();
    }

    // Atualiza os campos da interface com as informações do usuário
    private void updateUI() {
        if (usuario != null) {
            txtNome.setText(usuario.getNome());
            txtEmail.setText(usuario.getEmail());
            // Continue atualizando outros campos
        }
    }

    // Chamado quando o usuário clica em salvar
    @FXML
    private void handleSalvar() {
        if (usuario != null) {
            usuario.setNome(txtNome.getText());
            usuario.setEmail(txtEmail.getText());
            // Atualize outras propriedades do usuário conforme necessário

            // Lógica para salvar as alterações no banco de dados ou outra fonte de dados
            salvarUsuario(usuario);

            // Fechar a janela após salvar
            closeStage();
        } else {
            System.out.println("Erro: Não há usuário para salvar.");
        }
    }

    // Simula salvar o usuário no banco de dados ou serviço
    private void salvarUsuario(Usuario usuario) {
        System.out.println("Salvando o usuário: " + usuario.getNome());
        // Aqui você adicionaria a lógica para persistir o usuário alterado
    }

    // Chamado para fechar a janela sem salvar
    @FXML
    private void handleCancelar() {
        closeStage();
    }

    // Método para fechar a janela atual
    private void closeStage() {
        Stage stage = (Stage) btnSave.getScene().getWindow();
        stage.close();
    }
}
